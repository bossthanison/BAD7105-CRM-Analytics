WITH
  DATA AS(
  SELECT
    CUST_CODE,
    YEAR_MONTH,
    CASE
      WHEN ROW_NUMBER() OVER (PARTITION BY CUST_CODE ORDER BY YEAR_MONTH) = 1 THEN 1
    ELSE
    0
  END
    AS NEW_CUSTOMER,
    CASE
      WHEN DATE_DIFF(YEAR_MONTH,LAG(YEAR_MONTH) OVER (PARTITION BY CUST_CODE ORDER BY YEAR_MONTH), MONTH) = 1 THEN 1
    ELSE
    0
  END
    AS REPEAT_CUSTOMER,
    CASE
      WHEN DATE_DIFF(YEAR_MONTH,LAG(YEAR_MONTH) OVER (PARTITION BY CUST_CODE ORDER BY YEAR_MONTH), MONTH) > 1 THEN 1
    ELSE
    0
  END
    AS REACTIVATE_CUSTOMER,
    DATE_DIFF(YEAR_MONTH,LAG(YEAR_MONTH) OVER (PARTITION BY CUST_CODE ORDER BY YEAR_MONTH), MONTH) AS diff,
    LAG(YEAR_MONTH) OVER (PARTITION BY CUST_CODE ORDER BY YEAR_MONTH) AS PREVIOUS
  FROM (
    SELECT
      CUST_CODE,
      DATE_TRUNC(PARSE_DATE('%Y%m%d',
          CAST(SHOP_DATE AS STRING)), MONTH) AS YEAR_MONTH
    FROM
      `cedar-shard-323405.supermarket.supermarket_boss`
    GROUP BY
      1,
      2
    HAVING
      CUST_CODE IS NOT NULL
      AND YEAR_MONTH IS NOT NULL)),
  DATA_CHURN AS (
  SELECT
    DATE_TRUNC(DATE_ADD(LAST_DATE, INTERVAL 30 DAY),MONTH) AS CHURN_DATE,
    SUM(NUM) AS NUM
  FROM (
    SELECT
      CUST_CODE,
      MAX(PARSE_DATE('%Y%m%d',
          CAST(SHOP_DATE AS STRING))) AS LAST_DATE,
      1 AS NUM
    FROM
      `cedar-shard-323405.supermarket.supermarket_boss`
    WHERE
      CUST_CODE IS NOT NULL
      AND SHOP_DATE IS NOT NULL
    GROUP BY
      CUST_CODE
    ORDER BY
      CUST_CODE )
  GROUP BY
    1)
SELECT
  YEAR_MONTH,
  NEW_CUSTOMER,
  REPEAT_CUSTOMER,
  REACTIVATE_CUSTOMER,
  CASE
    WHEN DATA_CHURN.NUM IS NULL THEN 0
  ELSE
  DATA_CHURN.NUM * -1
END
  AS CHURN_CUSTOMER
FROM (
  SELECT
    YEAR_MONTH,
    SUM(NEW_CUSTOMER) AS NEW_CUSTOMER,
    SUM(REPEAT_CUSTOMER) AS REPEAT_CUSTOMER,
    SUM(REACTIVATE_CUSTOMER) AS REACTIVATE_CUSTOMER
  FROM
    DATA
  GROUP BY
    YEAR_MONTH ) DATA_NRR
LEFT JOIN
  DATA_CHURN
ON
  DATA_NRR.YEAR_MONTH = DATA_CHURN.CHURN_DATE
ORDER BY
  DATA_NRR.YEAR_MONTH;